#version: '3.10'
version: '2.2'
# sudo snap refresh docker --channel=latest/edge

services:
  nginx:
    build:
      context: .
      dockerfile: .docker/nginx.dockerfile
    restart: unless-stopped
    networks:
      - my-network
    ports:
      - "80:80"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:80" ]
      interval: 10s
      timeout: 3s
      retries: 5

  dashboard:
    build:
      context: .
      dockerfile: .docker/dashboard.dockerfile
    command: [ "wave", "run", "h2o_dashboard.dashboard", "--no-reload" ]
    restart: unless-stopped
    networks:
      - my-network
    depends_on:
      okx_websockets:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      FIREBASE_API_KEY: ${FIREBASE_API_KEY}
#      H2O_WAVE_ACCESS_KEYCHAIN: ".wave-keychain"
#      H2O_WAVE_DATA_DIR: "./data"
#      H2O_WAVE_DEBUG: "1"
#      H2O_WAVE_FORWARDED_HTTP_HEADERS: "*"
      H2O_WAVE_LISTEN: 0.0.0.0:10101
      H2O_WAVE_ADDRESS: http://0.0.0.0:10101
      H2O_WAVE_APP_ADDRESS: http://0.0.0.0:8000
#      H2O_WAVE_BASE_URL: "/"
#      H2O_WAVE_MAX_CACHE_REQUEST_SIZE: "5M"
#      H2O_WAVE_MAX_PROXY_REQUEST_SIZE: "5M"
#      H2O_WAVE_MAX_PROXY_RESPONSE_SIZE: "5M"
#      H2O_WAVE_MAX_REQUEST_SIZE: "5M"
#      H2O_WAVE_NO_STORE: "1"
#      H2O_WAVE_NO_LOG: "1"
      H2O_WAVE_PING_INTERVAL: "50s"
      # TODO
      OKX_API_KEY: ${OKX_API_KEY}
      OKX_SECRET_KEY: ${OKX_SECRET_KEY}
      OKX_PASSPHRASE: ${OKX_PASSPHRASE}
      OKX_SANDBOX_MODE: ${OKX_SANDBOX_MODE}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      DEFAULT_KEY_EXPIRE_TIME: ${DEFAULT_KEY_EXPIRE_TIME}
      REDIS_SERVICE_PASSWORD: ${REDIS_SERVICE_PASSWORD}

    ports:
      - "10101:10101"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:10101" ]
      interval: 10s
      timeout: 3s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    cpus: 0.5
    mem_limit: 512m
    mem_reservation: 256m


  redis:
    image: redis/redis-stack:latest
#    command: redis-server --requirepass ${REDIS_SERVICE_PASSWORD} --port ${REDIS_SERVICE_PORT}

    ports:
      - ${REDIS_SERVICE_PORT}:${REDIS_SERVICE_PORT}
      - 8001:8001
    environment:
      REDIS_ARGS: --requirepass ${REDIS_SERVICE_PASSWORD} --port ${REDIS_SERVICE_PORT}
    restart: unless-stopped
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    cpus: 0.5
    mem_limit: 4g
    mem_reservation: 512m
#    volumes:
#      - redis-data:/data


  okx_rest:
    build:
      context: .
      dockerfile: .docker/bot.dockerfile
    ports:
      #      - ${OKX_REST_SERVICE_PORT}:${OKX_REST_SERVICE_PORT}
      - 8080:8080
    restart: unless-stopped
    networks:
      - my-network
    depends_on:
      okx_websockets:
        condition: service_healthy
      okx_polling_service:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - MODULE_PATH=${OKX_REST_MODULE_PATH}
      - MODULE_NAME=${OKX_REST_MODULE_NAME}
      - HOST=0.0.0.0
      - PORT=8080
      - REDIS_STREAM_MAX_LEN=${REDIS_STREAM_MAX_LEN}
      - OKX_API_KEY=${OKX_API_KEY}
      - OKX_SECRET_KEY=${OKX_SECRET_KEY}
      - OKX_PASSPHRASE=${OKX_PASSPHRASE}
      - OKX_SANDBOX_MODE=${OKX_SANDBOX_MODE}
      - OKX_VERBOSE=${OKX_VERBOSE}
      - N_WORKERS=1
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - DEFAULT_KEY_EXPIRE_TIME=${DEFAULT_KEY_EXPIRE_TIME}
      - REDIS_SERVICE_PASSWORD=${REDIS_SERVICE_PASSWORD}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    cpus: 1
    mem_limit: 1g
    mem_reservation: 512m


  okx_websockets:
    build:
      context: .
      dockerfile: .docker/bot.dockerfile
    ports:
      - 8081:8081
    restart: unless-stopped
    networks:
      - my-network
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - MODULE_PATH=${OKX_WS_MODULE_PATH}
      - MODULE_NAME=${OKX_WS_MODULE_NAME}
      - HOST=0.0.0.0
      - PORT=8081
      - REDIS_STREAM_MAX_LEN=${REDIS_STREAM_MAX_LEN}
      - OKX_API_KEY=${OKX_API_KEY}
      - OKX_SECRET_KEY=${OKX_SECRET_KEY}
      - OKX_PASSPHRASE=${OKX_PASSPHRASE}
      - OKX_SANDBOX_MODE=${OKX_SANDBOX_MODE}
      - OKX_VERBOSE=${OKX_VERBOSE}
      - N_WORKERS=1
      - REDIS_SERVICE_PASSWORD=${REDIS_SERVICE_PASSWORD}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8081/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    cpus: 1
    mem_limit: 1g
    mem_reservation: 512m

  okx_polling_service:
    build:
      context: .
      dockerfile: .docker/bot.dockerfile
    ports:
      - 8082:8082
    restart: unless-stopped
    networks:
      - my-network
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - MODULE_PATH=${OKX_POLLING_MODULE_PATH}
      - MODULE_NAME=${OKX_POLLING_MODULE_NAME}
      - HOST=0.0.0.0
      - PORT=8082
      - REDIS_STREAM_MAX_LEN=${REDIS_STREAM_MAX_LEN}
      - OKX_API_KEY=${OKX_API_KEY}
      - OKX_SECRET_KEY=${OKX_SECRET_KEY}
      - OKX_PASSPHRASE=${OKX_PASSPHRASE}
      - OKX_SANDBOX_MODE=${OKX_SANDBOX_MODE}
      - OKX_VERBOSE=${OKX_VERBOSE}
      - N_WORKERS=1
      - REDIS_SERVICE_PASSWORD=${REDIS_SERVICE_PASSWORD}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8082/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    cpus: 1
    mem_limit: 1g
    mem_reservation: 512m




networks:
  my-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

#volumes:
#  redis-data:
#    driver: local
