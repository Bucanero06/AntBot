version: '3.10'

services:
  nginx:
    build:
      context: .
      dockerfile: .docker/nginx.dockerfile
    restart: always
    networks:
      - my-network
    ports:
      #    environment: variables are not being updated in the config files so out of sync with other services
      - ${NGINX_SERVICE_PORT}:${NGINX_SERVICE_PORT}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:80" ]
      interval: 10s
      timeout: 3s
      retries: 5

  dashboard:
    build:
      context: .
      dockerfile: .docker/dashboard.dockerfile
    command: [ "wave", "run", "h2o_dashboard.dashboard", "--no-reload" ]
    restart: always
    networks:
      - my-network
    #    depends_on:
    #      nginx:
    #        condition: service_healthy
    #      okx_websockets:
    #        condition: service_healthy
    environment:
      - DEVELOPMENT_GOD_MODE=${DEVELOPMENT_GOD_MODE}
      - BYPASS_SECURITY=${BYPASS_SECURITY}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:10101" ]
      interval: 10s
      timeout: 3s
      retries: 3





  redis:
    image: redis/redis-stack-server:latest
    ports:
      - ${REDIS_SERVICE_PORT}:${REDIS_SERVICE_PORT}
    restart: unless-stopped
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3


  okx_api:
    build:
      context: .
      dockerfile: .docker/bot.dockerfile
    ports:
      #      - ${OKX_API_SERVICE_PORT}:${OKX_API_SERVICE_PORT}
      - 8080:8080
    restart: always
    networks:
      - my-network
    #    depends_on:
    #      nginx:
    #        condition: service_healthy
    #      redis:
    #        condition: service_healthy
    environment:
      - MODULE_PATH=${OKX_API_MODULE_PATH}
      - MODULE_NAME=${OKX_API_MODULE_NAME}
      #      - PORT=${OKX_API_SERVICE_PORT}
      - PORT=8080
      - REDIS_STREAM_MAX_LEN=${REDIS_STREAM_MAX_LEN}
      #
      - OKX_API_KEY=${OKX_API_KEY}
      - OKX_SECRET_KEY=${OKX_SECRET_KEY}
      - OKX_PASSPHRASE=${OKX_PASSPHRASE}
      - OKX_SANDBOX_MODE=${OKX_SANDBOX_MODE}
      - OKX_VERBOSE=${OKX_VERBOSE}
      - DEVELOPMENT_GOD_MODE=${DEVELOPMENT_GOD_MODE}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 3


  okx_websockets:
    build:
      context: .
      dockerfile: .docker/bot.dockerfile
    restart: always
    networks:
      - my-network
    #    depends_on:
    #      redis:
    #        condition: service_healthy
    environment:
      - MODULE_PATH=${OKX_WS_MODULE_PATH}
      - MODULE_NAME=${OKX_WS_MODULE_NAME}
      - PORT=${OKX_WS_SERVICE_PORT}
      - REDIS_STREAM_MAX_LEN=${REDIS_STREAM_MAX_LEN}
      - OKX_API_KEY=${OKX_API_KEY}
      - OKX_SECRET_KEY=${OKX_SECRET_KEY}
      - OKX_PASSPHRASE=${OKX_PASSPHRASE}
      - OKX_SANDBOX_MODE=${OKX_SANDBOX_MODE}
      - OKX_VERBOSE=${OKX_VERBOSE}
      - DEVELOPMENT_GOD_MODE=${DEVELOPMENT_GOD_MODE}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8081/health" ]
      interval: 10s
      timeout: 5s
      retries: 3


networks:
  my-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

